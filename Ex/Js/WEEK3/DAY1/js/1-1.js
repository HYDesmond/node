/*
 * []的一些特殊性：
 *   1、里面出现的元字符一般都是代表本身意义的
 *    /[?.&=+]/ 这里出现的符号都是本身的意思
 *    /[\d]/ 此处的\d依然是0~9中的任意字符
 *
 *   2、中括号中出现`-`代表两种情况
 *    /[a-zA-Z0-9_]/  这里的`-`是一个范围链接符（从某一个开始到某一个结束,获取范围中的任何一个）
 *    /[a-z0-9_-]/  如果`-`左右两边的任何一边并没有内容，它代表本身的意思
 *
 *   3、中括号中出现的18不是数字18，而是1或者8中的任意字符
 *
 * ()的作用：
 *   小括号是分组（也可以理解为大正则中的小正则）
 *   1、改变默认的优先级  (x|y)
 *   2、分组引用  ()\1 出现和第一个分组一模一样的内容
 *   3、分组捕获
 */

//=>常用的正则表达式
//1、有效数字
// var reg = /^-?(\d|([1-9]\d+))(\.\d+)?$/;

//2、手机号
// var reg = /^1\d{10}$/;

//3、中文姓名
// var reg = /^[\u4E00-\u9FA5]{2,10}(·[\u4E00-\u9FA5]{2,10})?$/;

//4、邮箱
// var reg = /^\w+((-\w+)|(\.\w+))*@[a-zA-Z0-9]+((\.|-)[a-zA-Z0-9]+)*\.[a-zA-Z]+$/;

//5、身份证号码
var reg = /^(\d{6})(\d{4})(\d{2})(\d{2})\d{2}(\d)(X|\d)$/;

//=>1990~2014
// /^((199\d)|(200\d)|(201[0-4]))$/\

console.log(reg.exec('130828199012040617'));












