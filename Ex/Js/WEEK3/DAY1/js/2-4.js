var str = '2017-11-07 16:37:00';
//=>'2017年11月07日 16时37分00秒'

//=>使用正则实现
//1、执行一次捕获操作，得到需要的六个结果
var reg = /^(\d{4})-(\d{1,2})-(\d{1,2})\s+(\d{1,2}):(\d{1,2}):(\d{1,2})$/g;
// str = str.replace(reg, function () {
//     var arg = arguments;
//     return arg[1] + '年' + arg[2] + '月' + arg[3] + '日 ' + arg[4] + '时' + arg[5] + '分' + arg[6] + '秒';
// });
str = str.replace(reg, '$1年$2月$3日 $4时$5分$6秒');//=>$1等价于第一个分组中获取的内容,类似于上面代码的arg[1]
console.log(str);//=>'2017年11月07日 16时37分00秒'


/*
 * 思路一：字符串拆分法
 *   先按照空格把字符串拆成两部分  str.split(' ') => ['2017-11-07','16:37:00']
 *   再把上面数组中的第一项和第二项分别获取到
 *      str1='2017-11-07'
 *      把这个字符串按照-拆  str1.split('-') =>['2017','11','07']
 *      str2='16:37:00'
 *      把这个字符串按照:拆  str2.split(':') =>['16','37','00']
 *   最后把两个数组中的每一项按照指定格式拼接成为新的字符串
 */

/*
 * 思路二：使用日期数据完成操作
 *   首先把str变为标准的日期格式数据 new Date(str) =>Tue Nov 07 2017 16:37:00 GMT+0800 (中国标准时间)
 *   在IE浏览器中需要把原始字符串中的-替换为/才可以转换 str.replace(/-/g,'/')
 *
 *  使用Date类中提供的方法：
 *    getFullYear、getMonth、getDate、getHours、getMinutes、getSeconds...获取到年、月、日、小时、分钟、秒，最后拼接成我们需要的数据
 */